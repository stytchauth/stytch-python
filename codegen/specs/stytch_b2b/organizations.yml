classname: Organizations
additional_imports:
  - from stytch.core.models import SearchQuery, SearchResultsMetadata
  - from stytch.core.b2b.models import Member, Organization
methods:
  - name: create
    use_base_path_as_api_path: True
    method: POST
    args:
      - name: organization_name
        arg_type: str
      - name: organization_slug
        arg_type: str
      - name: trusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
      - name: email_jit_provisioning
        arg_type: Optional[str] = None
      - name: email_invites
        arg_type: Optional[str] = None
      - name: email_allowed_domains
        arg_type: Optional[List[str]] = None
      - name: sso_jit_provisioning
        arg_type: Optional[str] = None
    response_type:
      organization: Organization
  - name: get
    api_path: organization_id
    eval_api_path: true
    method: GET
    args:
      - name: organization_id
        arg_type: str
    response_type:
      organization: Organization
  - name: update
    method: PUT
    api_path: organization_id
    eval_api_path: true
    args:
      - name: organization_id
        arg_type: str
      - name: organization_name
        arg_type: Optional[str] = None
      - name: organization_slug
        arg_type: Optional[str] = None
      - name: organization_logo_url
        arg_type: Optional[str] = None
      - name: trusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
      - name: sso_default_connection_id
        arg_type: Optional[str] = None
      - name: sso_jit_provisioning_allowed_connections
        arg_type: Optional[List[str]] = None
      - name: sso_jit_provisioning
        arg_type: Optional[str] = None
      - name: email_allowed_domains
        arg_type: Optional[List[str]] = None
      - name: email_jit_provisioning
        arg_type: Optional[str] = None
      - name: email_invites
        arg_type: Optional[str] = None
    response_type:
      organization: Organization
  - name: delete
    method: DELETE
    api_path: organization_id
    eval_api_path: true
    args:
      - name: organization_id
        arg_type: str
    response_type:
      organization_id: str
  - name: delete_member
    method: DELETE
    api_path: 'f"{organization_id}/member/{member_id}"'
    eval_api_path: True
    args:
      - name: organization_id
        arg_type: str
      - name: member_id
        arg_type: str
    response_type:
      member_id: str
  - name: search
    method: POST
    args:
      - name: cursor
        arg_type: Optional[str] = None
      - name: limit
        arg_type: Optional[int] = None
      - name: query
        arg_type: Optional[SearchQuery] = None
    response_type:
      organizations: List[Organization]
      results_metadata: SearchResultsMetadata
  - name: search_members
    method: POST
    api_path: members/search
    args:
      - name: organization_ids
        arg_type: List[str]
      - name: cursor
        arg_type: Optional[str] = None
      - name: limit
        arg_type: Optional[int] = None
      - name: query
        arg_type: Optional[SearchQuery] = None
        map_pydantic: true
    response_type:
      members: List[Member]
      results_metadata: SearchResultsMetadata
