classname: Passwords
additional_imports:
  - from stytch.core.models import Name
methods:
  - name: create
    method: POST
    use_base_path_as_api_path: True
    args:
      - name: email
        arg_type: str
      - name: password
        arg_type: str
      - name: name
        arg_type: Optional[Union[Name, Dict[str, str]]] = None
      - name: session_duration_minutes
        arg_type: Optional[int] = None
      - name: session_custom_claims
        arg_type: Optional[Dict[str, Any]] = None
      - name: trusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
      - name: untrusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
    response_type:
      user_id: str
      email_id: str
  - name: authenticate
    method: POST
    args:
      - name: email
        arg_type: str
      - name: password
        arg_type: str
      - name: session_token
        arg_type: Optional[str] = None
      - name: session_jwt
        arg_type: Optional[str] = None
      - name: session_duration_minutes
        arg_type: Optional[int] = None
      - name: session_custom_claims
        arg_type: Optional[Dict[str, Any]] = None
    response_type:
      user_id: str
      user: User
      session_jwt: str
      session_token: str
      session: Optional[StytchSession]
  - name: strength_check
    method: POST
    args:
      - name: password
        arg_type: str
      - name: email
        arg_type: Optional[str] = None
    response_type:
      valid_password: bool
      score: int
      breached_password: bool
      feedback: Dict[str, Any]
      strength_policy: str
      breach_detection_on_create: bool
  - name: migrate
    method: POST
    args:
      - name: email
        arg_type: str
      - name: hash
        arg_type: str
      - name: hash_type
        arg_type: str
      - name: md_5_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: argon_2_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: sha_1_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: scrypt_config
        arg_type: Optional[Dict[str, Any]] = None
      - name: name
        arg_type: Optional[Union[Name, Dict[str, str]]] = None
      - name: trusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
      - name: untrusted_metadata
        arg_type: Optional[Dict[str, Any]] = None
    response_type:
      user_id: str
      email_id: str
      user_created: bool
sub_apis:
  - classname: Email
    sub_url: passwords/email
    filename: passwords_email
    methods:
      - name: reset_start
        api_path: reset/start
        method: POST
        args:
          - name: email
            arg_type: str
          - name: login_redirect_url
            arg_type: Optional[str] = None
          - name: reset_password_redirect_url
            arg_type: Optional[str] = None
          - name: reset_password_expiration_minutes
            arg_type: Optional[int] = None
          - name: attributes
            arg_type: Optional[Dict[str, str]] = None
          - name: code_challenge
            arg_type: Optional[str] = None
          - name: locale
            arg_type: Optional[str] = None
          - name: reset_password_template_id
            arg_type: Optional[str] = None
        response_type:
          user_id: str
          email_id: str
      - name: reset
        method: POST
        args:
          - name: token
            arg_type: str
          - name: password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
          - name: session_duration_minutes
            arg_type: Optional[int] = None
          - name: session_custom_claims
            arg_type: Optional[Dict[str, Any]] = None
          - name: attributes
            arg_type: Optional[Dict[str, str]] = None
          - name: options
            arg_type: Optional[Dict[str, str]] = None
          - name: code_verifier
            arg_type: Optional[str] = None
        response_type:
          user_id: str
  - classname: ExistingPassword
    sub_url: passwords/existing_password
    filename: passwords_existing_password
    methods:
      - name: reset
        method: POST
        args:
          - name: email
            arg_type: str
          - name: existing_password
            arg_type: str
          - name: new_password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
          - name: session_duration_minutes
            arg_type: Optional[int] = None
          - name: session_custom_claims
            arg_type: Optional[Dict[str, Any]] = None
        response_type:
          user_id: str
  - classname: Session
    sub_url: passwords/session
    filename: passwords_session
    methods:
      - name: reset
        method: POST
        args:
          - name: password
            arg_type: str
          - name: session_token
            arg_type: Optional[str] = None
          - name: session_jwt
            arg_type: Optional[str] = None
        response_type:
          user_id: str
          session: Optional[StytchSession]
