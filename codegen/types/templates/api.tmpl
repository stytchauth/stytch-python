#!/usr/bin/env python3

from typing import Any, Dict, List, Optional

import requests
import aiohttp

{# TODO: Make these configurable, too #}
from stytch.core.api.base import ApiBase
from stytch.core.http.client import AsyncClient, SyncClient
{% for sub_api in this.sub_apis %}
from {{ api_path_in_gen }}.{{ sub_api.filename_base }} import {{ sub_api.classname }}
{% endfor %}
{% for additional_import in this.additional_imports %}
{{ additional_import }}
{% endfor %}


class {{ this.classname }}:
    def __init__(
      self,
      api_base: ApiBase,
      sync_client: SyncClient,
      async_client: AsyncClient,
    ) -> None:
        self.api_base = api_base
        self.sync_client = sync_client
        self.async_client = async_client
        {% for sub_api in this.sub_apis %}
        self.{{ sub_api.filename }} = {{ sub_api.classname }}(api_base, sync_client, async_client)
        {% endfor %}

    @property
    def sub_url(self) -> str:
        return "{{ this.sub_url }}"

    {% for method in this.methods %}
    {{ method.generate()|indent(4) }}
    {% endfor %}
