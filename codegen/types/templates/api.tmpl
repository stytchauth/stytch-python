# !!!
# WARNING: This file is autogenerated
# Only modify code within MANUAL() sections
# or your changes may be overwritten later!
# !!!

from typing import Any, Dict, List, Optional, Union

import pydantic

from stytch.core.api_base import ApiBase
from stytch.core.http.client import AsyncClient, SyncClient
{% for sub_api in this.sub_apis %}
from {{ api_path_in_gen }}.{{ sub_api.filename_base }} import {{ sub_api.classname }}
{% endfor %}
{% if this.methods %}
from {{ models_path_in_gen }}.{{ this.filename_base }} import (
  {% for method in this.methods if not method.manual_implementation %}
  {{ method.response_type.name }},
  {% endfor %}
)
{% endif %}
{% for additional_import in this.additional_imports %}
{{ additional_import }}
{% endfor %}


class {{ this.classname }}:
    def __init__(
      self,
      api_base: ApiBase,
      sync_client: SyncClient,
      async_client: AsyncClient,
    ) -> None:
        self.api_base = api_base
        self.sync_client = sync_client
        self.async_client = async_client
        {% for sub_api in this.sub_apis %}
        self.{{ sub_api.filename.partition(this.filename + "_")[2] }} = {{ sub_api.classname }}(api_base, sync_client, async_client)
        {% endfor %}

    @property
    def sub_url(self) -> str:
        return "{{ this.sub_url }}"

    {% for method in this.methods %}
    {{ method.generate()|indent(4) }}
    {% endfor %}
