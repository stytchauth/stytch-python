{% if not this.manual_implementation %}
def {{ this.name }}(
  self,
  {% for arg in this.args %}
  {{ arg.generate() }},
  {% endfor %}
) -> {{ this.return_type_name }}:
    {% if not this.is_delete_method %}
    {{ this.params_or_data }}: Dict[str, Any] = {
    {% for arg in this.args %}
      {% if arg.always_include %}
        {% if arg.map_with %}
          "{{ arg.name }}": {{ arg.map_with }}({{ arg.name }}),
        {% else %}
          "{{ arg.name }}": {{ arg.name }},
        {% endif %}
      {% endif %}
    {% endfor %}
    }

    {% for arg in this.args %}
      {% if not arg.always_include %}
    if {{ arg.name }} is not None:
        {% if arg.map_with %}
      {{ this.params_or_data }}["{{ arg.name }}"] = {{ arg.map_with }}({{ arg.name }})
        {% else %}
      {{ this.params_or_data }}["{{ arg.name }}"] = {{ arg.name }}
        {% endif %}
      {% endif %}
    {% endfor %}
    {% endif %}

    {% if this.eval_api_path %}
    url = self.api_base.route_with_sub_url(self.sub_url, {{ this.api_path }})
    {% else %}
    url = self.api_base.route_with_sub_url(self.sub_url, "{{ this.api_path }}")
    {% endif %}

    {% if this.is_delete_method %}
    return self.sync_client.{{ this.method }}(url)
    {% else %}
    return self.sync_client.{{ this.method }}(url, {{ this.params_or_data }}={{ this.params_or_data }})
    {% endif %}

async def {{ this.name }}_async(
  self,
  {% for arg in this.args %}
  {{ arg.generate() }},
  {% endfor %}
) -> {{ this.return_type_name }}:
    {% if not this.is_delete_method %}
    {{ this.params_or_data }}: Dict[str, Any] = {
    {% for arg in this.args %}
      {% if arg.always_include %}
        {% if arg.map_with %}
          "{{ arg.name }}": {{ arg.map_with }}({{ arg.name }}),
        {% else %}
          "{{ arg.name }}": {{ arg.name }},
        {% endif %}
      {% endif %}
    {% endfor %}
    }

    {% for arg in this.args %}
      {% if not arg.always_include %}
    if {{ arg.name }} is not None:
      {{ this.params_or_data }}["{{ arg.name }}"] = {{ arg.name }}
      {% endif %}
    {% endfor %}
    {% endif %}

    {% if this.eval_api_path %}
    url = self.api_base.route_with_sub_url(self.sub_url, {{ this.api_path }})
    {% else %}
    url = self.api_base.route_with_sub_url(self.sub_url, "{{ this.api_path }}")
    {% endif %}

    {% if this.is_delete_method %}
    return await self.async_client.{{ this.method }}(url)
    {% else %}
    return await self.async_client.{{ this.method }}(url, {{ this.params_or_data }}={{ this.params_or_data }})
    {% endif %}
{% else %}
# MANUAL({{ this.name }})
def {{ this.name }}(
  self,
  {% for arg in this.args %}
  {{ arg.generate() }},
  {% endfor %}
) -> None:
    # 1. Check if this method should be async or not
    # 2. Set the return type appropriately
    # 3. Fill out the method details
    # 4. Remember to write a test since this is manually generated
    raise NotImplementedError("Fill me out!")
# ENDMANUAL({{ this.name}})
{% endif %}
