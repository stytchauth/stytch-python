# !!!
# WARNING: This file is autogenerated
# Only modify code within MANUAL() sections
# or your changes may be overwritten later!
# !!!

from typing import Any, Dict

from stytch.core.api_base import ApiBase
from stytch.core.http.client import AsyncClient, SyncClient
from stytch.models.sessions import MultitenantsessionsjwksResponse


class Sessions:
    def __init__(
        self,
        api_base: ApiBase,
        sync_client: SyncClient,
        async_client: AsyncClient,
    ) -> None:
        self.api_base = api_base
        self.sync_client = sync_client
        self.async_client = async_client

    @property
    def sub_url(self) -> str:
        return "sessions"

    def MultiTenantSessionsJwks(
        self,
        project_id: str,
    ) -> MultitenantsessionsjwksResponse:
        payload: Dict[str, Any] = {
            "project_id": project_id,
        }

        url = self.api_base.route_with_sub_url(
            self.sub_url, "/v1/b2b/sessions/jwks/{project_id}"
        )

        res = self.sync_client.get(url, params=payload)
        return MultitenantsessionsjwksResponse.from_json(
            res.response.status_code, res.json
        )

    async def MultiTenantSessionsJwks_async(
        self,
        project_id: str,
    ) -> MultitenantsessionsjwksResponse:
        payload: Dict[str, Any] = {
            "project_id": project_id,
        }

        url = self.api_base.route_with_sub_url(
            self.sub_url, "/v1/b2b/sessions/jwks/{project_id}"
        )

        res = await self.async_client.get(url, params=payload)
        return MultitenantsessionsjwksResponse.from_json(res.response.status, res.json)
