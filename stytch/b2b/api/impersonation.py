# !!!
# WARNING: This file is autogenerated
# Only modify code within MANUAL() sections
# or your changes may be overwritten later!
# !!!

from __future__ import annotations

from typing import Any, Dict

from stytch.b2b.models.impersonation import AuthenticateResponse
from stytch.core.api_base import ApiBase
from stytch.core.http.client import AsyncClient, SyncClient


class Impersonation:
    def __init__(
        self, api_base: ApiBase, sync_client: SyncClient, async_client: AsyncClient
    ) -> None:
        self.api_base = api_base
        self.sync_client = sync_client
        self.async_client = async_client

    def authenticate(
        self,
        token: str,
    ) -> AuthenticateResponse:
        headers: Dict[str, str] = {}
        data: Dict[str, Any] = {
            "token": token,
        }

        url = self.api_base.url_for("/v1/b2b/impersonation/authenticate", data)
        res = self.sync_client.post(url, data, headers)
        return AuthenticateResponse.from_json(res.response.status_code, res.json)

    async def authenticate_async(
        self,
        token: str,
    ) -> AuthenticateResponse:
        headers: Dict[str, str] = {}
        data: Dict[str, Any] = {
            "token": token,
        }

        url = self.api_base.url_for("/v1/b2b/impersonation/authenticate", data)
        res = await self.async_client.post(url, data, headers)
        return AuthenticateResponse.from_json(res.response.status, res.json)
